apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.greenrobot.greendao'
kapt {
    generateStubs = true
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    signingConfigs {
        release {
            storeFile file('F:\\KaiWuTechnology.jks')
            storePassword 'kaiwu2019'
            keyAlias = 'KaiWu'
            keyPassword 'kaiwu2019'
        }
        debug {
            storeFile file('F:\\KaiWuTechnology.jks')
            storePassword 'kaiwu2019'
            keyAlias = 'KaiWu'
            keyPassword 'kaiwu2019'
        }
    }
    useLibrary 'org.apache.http.legacy'
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    //添加如下配置就ok了
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    defaultConfig {
        multiDexEnabled true
        applicationId "com.kaiwukj.android.communityhui"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "dc950f3b32df4441fb84e895",
                JPUSH_CHANNEL: "developer-default",
        ]

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            buildConfigField("String", "API_HOST", "\"http://172.168.1.100:8070\"")
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            buildConfigField("String", "API_HOST", "\"http://hm.kaiwumace.com\"")
//          minifyEnabled true
//          shrinkResources true
//          zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                //这里修改apk文件名
                outputFileName = "SC_v${defaultConfig.versionName}_${buildType.name}_${releaseTime()}.apk"
            }
    }

    greendao {
        schemaVersion 1
        daoPackage 'com.kaiwukj.android.communityhui.greendao.gen'
        targetGenDir 'src/main/java'
    }
}

static def releaseTime() {
    return new Date().format("yyMMdd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    /*kotlin*/
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //androidx
    implementation rootProject.ext.dependencies["appcompat"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["design"]
    //view
    implementation rootProject.ext.dependencies["recycleview"]
    implementation rootProject.ext.dependencies["fragmentation"]
    implementation rootProject.ext.dependencies["fragmentation-code"]
    implementation rootProject.ext.dependencies["fragmentation-swipeback"]
    implementation rootProject.ext.dependencies["bottomnavigationviewex"]
    implementation rootProject.ext.dependencies["banner"]
    implementation rootProject.ext.dependencies["magicindicator"]
    implementation rootProject.ext.dependencies["sneaker"]
    implementation rootProject.ext.dependencies["pick-view"]

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    //glide
    implementation rootProject.ext.dependencies["glide"]
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    kapt rootProject.ext.dependencies["glide-compiler"]
    //dagger
    kapt rootProject.ext.dependencies["dagger2-compiler"]
    //butter knife
    implementation rootProject.ext.dependencies["butterknife"]
    kapt rootProject.ext.dependencies["butterknife-compiler"]
    implementation rootProject.ext.dependencies["autosize"]
    /*QMui*/
    implementation rootProject.ext.dependencies["qmui"]
    implementation rootProject.ext.dependencies["qmuiteam-arch"]
    /*ARouter*/
    implementation rootProject.ext.dependencies["arouter"]
    kapt rootProject.ext.dependencies["arouter-compiler"]
    //tools
    implementation rootProject.ext.dependencies["androideventbus"]
    api('com.cysion:ImagePicker:1.0.7') {
        exclude group: 'com.android.support'
    }
    /*七牛云*/
    implementation 'com.qiniu:qiniu-android-sdk:7.3.15'
    implementation rootProject.ext.dependencies["ninegridview"]

    implementation rootProject.ext.dependencies["smartrefreshlayout"]
    /*Adapter*/
    implementation rootProject.ext.dependencies["base-recyclerview-adapter"]

    //MVP框架
    implementation project(path: ':mcas')
    //test
    implementation "androidx.multidex:multidex:2.0.1"
    testImplementation rootProject.ext.dependencies["junit"]
    debugImplementation rootProject.ext.dependencies["canary-debug"]
    releaseImplementation rootProject.ext.dependencies["canary-release"]
    testImplementation rootProject.ext.dependencies["canary-release"]
    /*环信*/
    implementation rootProject.ext.dependencies["google-gms"]
    implementation rootProject.ext.dependencies["google-firebase"]
    implementation rootProject.ext.dependencies["parse"]
    api rootProject.ext.dependencies["hx-sdk"]
    implementation project(path: ':easeui')
    implementation rootProject.ext.dependencies["j256"]
    /*极光推送服务*/
    implementation rootProject.ext.dependencies["jpush"]

    implementation rootProject.ext.dependencies["jcore"]
    implementation rootProject.ext.dependencies["greendao"]
}
